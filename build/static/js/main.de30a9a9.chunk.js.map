{"version":3,"sources":["components/Profile/profile.module.scss","components/Profile/profile.js","components/Skills/skills.js","components/Background/background.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","profilePic","Profile","react_default","a","createElement","Container","className","ProfileStyle","Skills","maxWidth","Paper","Typography","variant","color","Background","_ref","background","BackgroundStyle","palette","type","primary","blue","secondary","grey","createMuiTheme","themeName","App","props","ThemeProvider","theme","CssBaseline","Background_background","AppBar","position","Toolbar","profile","skills","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,WAAA,8OCwBHC,MAhBf,WACI,OAAOC,EAAAC,EAAAC,cAAA,eAEHF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACQH,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAaP,aAC7BE,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,yDCiDDI,MAxDf,WACI,OAAON,EAAAC,EAAAC,cAAA,eAEXF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,SAASG,SAAS,MAC7BP,EAAAC,EAAAC,cAACM,EAAA,EAAD,KACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,8BACXJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,WAKJX,EAAAC,EAAAC,cAAA,KAAGE,UAAU,2BAA0BJ,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,gBAIFX,EAAAC,EAAAC,cAAA,KAAGE,UAAU,iCACXJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,WAMNX,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,gCACXJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,aAKJX,EAAAC,EAAAC,cAAA,KAAGE,UAAU,8BAA6BJ,EAAAC,EAAAC,cAAA,WACxCF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,WAIFX,EAAAC,EAAAC,cAAA,KAAGE,UAAU,4BAA2BJ,EAAAC,EAAAC,cAAA,WACtCF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,YAAYC,MAAM,WAAtC,+BCvCDC,EAPI,SAAAC,KAAGC,WAAH,OACfd,EAAAC,EAAAC,cAAA,UAAQE,UAAWW,IAAgBD,wFCCjCE,EAAU,CACZC,KAAM,OACNC,QAASC,IACTC,UAAWC,KAIAC,cAAe,CAAEN,UAASO,UAFvB,oBC+BFC,MAtBhB,SAAaC,GACX,OACEzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAEbJ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAeC,MAAOA,GACpB3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,MACA5B,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAQC,SAAS,SAASpB,MAAM,WAC9BX,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,KACEhC,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,WAA/B,qBAKJX,EAAAC,EAAAC,cAAC+B,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAD,SCtBYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.de30a9a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePic\":\"profile_profilePic__27Z0o\"};","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\n\n\nimport ProfileStyle from './profile.module.scss'\n\nfunction Profile() {\n    return <section>\n\n        <Container>\n                <div className={ProfileStyle.profilePic}></div>\n                <h1>Justin Ashcraft</h1>\n                <h3>Full-stack web developer</h3>\n        </Container>\n\n    </section>\n}\n\nProfile.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default Profile","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\n\n\nfunction Skills() {\n    return <section>\n\n<Container className=\"skills\" maxWidth=\"xs\">\n          <Paper>\n            <div>\n              <i className=\"fab fa-html5 fa-w-12 fa-5x\">\n                <div>\n                  <Typography variant=\"subtitle2\" color=\"inherit\">\n                    HTML5\n                  </Typography>\n                </div>\n              </i>\n              <i className=\"fab fa-js fa-w-12 fa-5x\"><div>\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                  JavaScript\n          </Typography>\n              </div></i>\n              <i className=\"fab fa-css3-alt fa-w-12 fa-5x\">\n                <div>\n                  <Typography variant=\"subtitle2\" color=\"inherit\">\n                    CSS3\n                  </Typography>\n                </div>\n              </i>\n            </div>\n            <div>\n\n              <i className=\"fab fa-angular fa-w-12 fa-5x\">\n                <div>\n                  <Typography variant=\"subtitle2\" color=\"inherit\">\n                    Angular\n                  </Typography>\n                </div>\n              </i>\n              <i className=\"fab fa-react fa-w-12 fa-5x\"><div>\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                  React\n          </Typography>\n              </div></i>\n              <i className=\"fab fa-aws fa-w-12 fa-5x\"><div>\n                <Typography variant=\"subtitle2\" color=\"inherit\">\n                  AWS\n          </Typography>\n              </div></i>\n            </div>\n          </Paper>\n        </Container>\n\n    </section>\n}\n\nSkills.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default Skills","import React from 'react';\nimport BackgroundStyle from './background.module.scss';\n\nconst Background = ({ background }) => (\n    <canvas className={BackgroundStyle.background}>\n    </canvas>\n)\n\n\n\nexport default Background","\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport grey from '@material-ui/core/colors/grey';\n\nconst palette = {\n    type: 'dark',\n    primary: blue,\n    secondary: grey\n};\nconst themeName = 'JDA Theme';\n\nexport default createMuiTheme({ palette, themeName });","import React from 'react';\n//import logo from './logo.svg';\n\n\nimport Profile from \"./components/Profile/profile\";\nimport Skills from \"./components/Skills/skills\";\nimport Background from './components/Background/background';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport theme from './theme';\n\nimport './App.scss';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Background></Background>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Justin Ashcraft\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <Profile></Profile>\n        <Skills></Skills>\n        \n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}